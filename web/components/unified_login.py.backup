"""
统一登录组件
支持本地登录和SSO登录的统一界面
"""

import streamlit as st
import time
import sys
from pathlib import Path

# 添加项目根目录到Python路径
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

# 导入统一认证管理器
from web.utils.unified_auth_manager import unified_auth_manager

# 导入用户体验管理器
try:
    from web.utils.user_experience_manager import (
        get_error_manager, get_redirect_manager, get_feedback_manager,
        initialize_user_experience_manager
    )
    # 初始化用户体验管理器
    initialize_user_experience_manager(unified_auth_manager)
    UX_AVAILABLE = True
except ImportError:
    UX_AVAILABLE = False

# 导入Authing管理器（用于SSO）
try:
    from web.utils.authing_manager import authing_manager
except ImportError:
    authing_manager = None

def render_unified_login_form():
    """渲染统一登录表单"""
    
    # 首先处理SSO回调 - 必须在页面渲染前处理
    if authing_manager and 'code' in st.query_params:
        code = st.query_params['code']
        with st.spinner("正在验证 SSO 登录..."):
            success, user_info = authing_manager.login_with_authing(code)
            if success and user_info:
                # 使用统一认证管理器处理SSO登录
                unified_auth_manager.login_sso(user_info)
                
                st.success(f"✅ SSO 登录成功！欢迎 {user_info.get('name', user_info.get('username', '用户'))}")
                time.sleep(1)
                # 使用重定向管理器处理登录后跳转
                if UX_AVAILABLE:
                    redirect_manager = get_redirect_manager()
                    redirect_manager.redirect_after_login('sso')
                else:
                    # 清除URL参数并添加默认分析参数
                    st.query_params.clear()
                    st.query_params['state'] = 'default_state'
                    st.query_params['provider'] = 'dashscope'
                    st.query_params['category'] = 'openai'
                    st.query_params['model'] = 'qwen-plus-latest'
                    st.rerun()
            else:
                st.error("❌ SSO 登录验证失败，请重试")
                # 清除URL参数
                if 'code' in st.query_params:
                    del st.query_params['code']
                st.rerun()
    
    # 高端视觉设计的登录页面
    st.markdown("""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600&display=swap');
    
    /* 高端深色渐变背景 */
    .stApp {
        background: 
            radial-gradient(ellipse at top, #1e293b 0%, #0f172a 100%),
            linear-gradient(135deg, #0f172a 0%, #1e293b 25%, #334155 50%, #1e293b 75%, #0f172a 100%);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        min-height: 100vh;
        position: relative;
        overflow: hidden;
    }
    
    /* 动态粒子背景 */
    .stApp::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            radial-gradient(circle at 25% 25%, #3b82f6 0%, transparent 50%),
            radial-gradient(circle at 75% 75%, #8b5cf6 0%, transparent 50%),
            radial-gradient(circle at 50% 50%, #06b6d4 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, #f59e0b 0%, transparent 50%),
            radial-gradient(circle at 20% 80%, #ef4444 0%, transparent 50%);
        background-size: 800px 800px, 600px 600px, 400px 400px, 300px 300px, 500px 500px;
        background-position: 0% 0%, 100% 100%, 50% 50%, 80% 20%, 20% 80%;
        opacity: 0.03;
        animation: particleFloat 30s ease-in-out infinite;
        z-index: -2;
    }
    
    /* 网格背景 */
    .stApp::after {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            linear-gradient(rgba(59, 130, 246, 0.1) 1px, transparent 1px),
            linear-gradient(90deg, rgba(59, 130, 246, 0.1) 1px, transparent 1px);
        background-size: 50px 50px;
        opacity: 0.5;
        z-index: -1;
        animation: gridMove 20s linear infinite;
    }
    
    @keyframes particleFloat {
        0%, 100% { 
            background-position: 0% 0%, 100% 100%, 50% 50%, 80% 20%, 20% 80%;
            opacity: 0.03;
        }
        25% { 
            background-position: 10% 10%, 90% 90%, 60% 40%, 70% 30%, 30% 70%;
            opacity: 0.05;
        }
        50% { 
            background-position: 20% 5%, 80% 95%, 45% 55%, 85% 15%, 15% 85%;
            opacity: 0.04;
        }
        75% { 
            background-position: 5% 15%, 95% 85%, 55% 45%, 75% 25%, 25% 75%;
            opacity: 0.06;
        }
    }
    
    @keyframes gridMove {
        0% { transform: translate(0, 0); }
        100% { transform: translate(50px, 50px); }
    }

    /* 高端玻璃态登录卡片 */
    div[data-testid="stAppViewContainer"] .main .block-container {
        max-width: 480px;
        width: clamp(350px, 90vw, 480px);
        background: 
            linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%),
            rgba(15, 23, 42, 0.8);
        backdrop-filter: blur(40px) saturate(180%);
        border-radius: 32px;
        border: 2px solid;
        border-image: linear-gradient(135deg, 
            rgba(59, 130, 246, 0.5) 0%, 
            rgba(139, 92, 246, 0.3) 25%,
            rgba(6, 182, 212, 0.4) 50%,
            rgba(139, 92, 246, 0.3) 75%,
            rgba(59, 130, 246, 0.5) 100%) 1;
        box-shadow: 
            0 32px 64px rgba(0, 0, 0, 0.4),
            0 0 0 1px rgba(255, 255, 255, 0.05) inset,
            0 1px 0 rgba(255, 255, 255, 0.1) inset;
        padding: 48px 40px;
        margin: 8vh auto;
        box-sizing: border-box;
        position: relative;
        overflow: hidden;
    }
    
    /* 卡片内部光效 */
    div[data-testid="stAppViewContainer"] .main .block-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: linear-gradient(90deg, 
            transparent 0%, 
            rgba(59, 130, 246, 0.8) 20%, 
            rgba(139, 92, 246, 0.8) 50%, 
            rgba(6, 182, 212, 0.8) 80%, 
            transparent 100%);
        animation: borderGlow 3s ease-in-out infinite alternate;
    }
    
    @keyframes borderGlow {
        0% { opacity: 0.5; transform: scaleX(0.8); }
        100% { opacity: 1; transform: scaleX(1); }
    }
    
    /* 去除顶部内边距 */
    section.main { padding-top: 0 !important; }
    div[data-testid="stAppViewContainer"] { padding-top: 0 !important; }
    
    /* 登录卡片容器 */
    .login-container {
        width: 100%;
        background: transparent;
        border: none;
        box-shadow: none;
        padding: 0;
        display: flex;
        flex-direction: column;
        gap: 24px;
        position: relative;
    }
    
    /* 高端品牌标识区 */
    .login-header {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 24px;
        margin-bottom: 40px;
        text-align: center;
        position: relative;
    }
    
    /* 3D 品牌图标 */
    .brand-icon {
        width: 96px;
        height: 96px;
        background: 
            linear-gradient(135deg, #3b82f6 0%, #8b5cf6 50%, #06b6d4 100%);
        border-radius: 28px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 42px;
        color: white;
        position: relative;
        overflow: hidden;
        box-shadow: 
            0 20px 40px rgba(59, 130, 246, 0.3),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset,
            0 1px 0 rgba(255, 255, 255, 0.2) inset;
        transform-style: preserve-3d;
        animation: iconFloat 6s ease-in-out infinite;
    }
    
    .brand-icon::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, 
            #3b82f6, #8b5cf6, #06b6d4, #f59e0b, #ef4444, #3b82f6);
        background-size: 400% 400%;
        border-radius: 30px;
        z-index: -1;
        animation: gradientShift 4s ease infinite;
        filter: blur(8px);
        opacity: 0.7;
    }
    
    .brand-icon::after {
        content: '';
        position: absolute;
        top: 10%;
        left: 10%;
        width: 30%;
        height: 30%;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        filter: blur(10px);
        animation: highlight 3s ease-in-out infinite alternate;
    }
    
    @keyframes iconFloat {
        0%, 100% { transform: translateY(0px) rotateX(0deg) rotateY(0deg); }
        25% { transform: translateY(-8px) rotateX(5deg) rotateY(5deg); }
        50% { transform: translateY(-4px) rotateX(0deg) rotateY(10deg); }
        75% { transform: translateY(-12px) rotateX(-5deg) rotateY(5deg); }
    }
    
    @keyframes gradientShift {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    
    @keyframes highlight {
        0% { opacity: 0.2; transform: scale(1); }
        100% { opacity: 0.4; transform: scale(1.1); }
    }
    
    /* 高端标题设计 */
    .brand-title {
        font-family: 'Inter', sans-serif;
        font-weight: 900;
        font-size: 36px;
        background: linear-gradient(135deg, 
            #ffffff 0%, 
            #3b82f6 25%, 
            #8b5cf6 50%, 
            #06b6d4 75%, 
            #ffffff 100%);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        margin: 0;
        letter-spacing: -0.03em;
        text-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
        animation: titleGlow 4s ease-in-out infinite alternate;
        position: relative;
    }
    
    .brand-title::after {
        content: 'TradingAgents';
        position: absolute;
        top: 0;
        left: 0;
        background: linear-gradient(135deg, #3b82f6, #8b5cf6, #06b6d4);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        opacity: 0.3;
        filter: blur(2px);
        z-index: -1;
    }
    
    @keyframes titleGlow {
        0% { 
            background-position: 0% 50%;
            filter: brightness(1) contrast(1);
        }
        100% { 
            background-position: 100% 50%;
            filter: brightness(1.2) contrast(1.1);
        }
    }
    
    /* 科技感副标题 */
    .brand-subtitle {
        font-family: 'JetBrains Mono', monospace;
        font-weight: 500;
        font-size: 14px;
        color: #94a3b8;
        margin: 0;
        opacity: 0.9;
        letter-spacing: 0.5px;
        position: relative;
    }
    
    .brand-subtitle::before {
        content: '> ';
        color: #3b82f6;
        font-weight: 600;
        animation: cursor 1.5s infinite;
    }
    
    @keyframes cursor {
        0%, 50% { opacity: 1; }
        51%, 100% { opacity: 0.3; }
    }
    
    /* 高端输入框设计 */
    .input-group {
        display: flex;
        flex-direction: column;
        gap: 12px;
        width: 100%;
        position: relative;
        margin-bottom: 24px;
    }
    
    .input-label {
        font-family: 'Inter', sans-serif;
        font-weight: 600;
        font-size: 14px;
        color: #e2e8f0;
        margin-bottom: 8px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
    }
    
    .input-label::after {
        content: '';
        position: absolute;
        bottom: -4px;
        left: 0;
        width: 20px;
        height: 2px;
        background: linear-gradient(90deg, #3b82f6, #8b5cf6);
        border-radius: 1px;
    }
    
    .input-wrapper { 
        width: 100%; 
        position: relative;
    }
    
    .input-icon {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: #9CA3AF;
        font-size: 18px;
        z-index: 2;
        transition: color 0.2s ease;
    }
    
    .input-icon-right {
        position: absolute;
        right: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: #9CA3AF;
        font-size: 18px;
        cursor: pointer;
        z-index: 2;
        transition: color 0.2s ease;
    }
    
    .input-icon-right:hover {
        color: #667eea;
    }
    
    /* 高端玻璃态输入框 */
    .stTextInput > div > div > input {
        width: 100% !important;
        height: 64px !important;
        background: 
            linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%),
            rgba(30, 41, 59, 0.8) !important;
        backdrop-filter: blur(20px) saturate(180%) !important;
        border: 2px solid rgba(59, 130, 246, 0.2) !important;
        border-radius: 20px !important;
        padding: 0 24px !important;
        font-family: 'Inter', sans-serif !important;
        font-size: 16px !important;
        font-weight: 500 !important;
        color: #f1f5f9 !important;
        box-sizing: border-box !important;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1) !important;
        box-shadow: 
            0 8px 32px rgba(0, 0, 0, 0.3),
            0 0 0 1px rgba(255, 255, 255, 0.05) inset !important;
        position: relative;
    }
    
    .stTextInput > div > div > input::placeholder {
        color: #64748b !important;
        font-family: 'Inter', sans-serif !important;
        font-weight: 400 !important;
    }
    
    .stTextInput > div > div > input:focus {
        border-color: #3b82f6 !important;
        box-shadow: 
            0 0 0 4px rgba(59, 130, 246, 0.2) !important,
            0 12px 40px rgba(59, 130, 246, 0.3) !important,
            0 0 0 1px rgba(255, 255, 255, 0.1) inset !important;
        outline: none !important;
        background: 
            linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.08) 100%),
            rgba(30, 41, 59, 0.9) !important;
        transform: translateY(-2px) scale(1.02) !important;
        color: #ffffff !important;
    }
    
    .stTextInput > div > div > input:hover {
        border-color: rgba(59, 130, 246, 0.4) !important;
        box-shadow: 
            0 8px 32px rgba(0, 0, 0, 0.4),
            0 0 20px rgba(59, 130, 246, 0.1) !important;
        transform: translateY(-1px) !important;
    }
    
    /* 输入框发光效果 */
    .stTextInput > div > div {
        position: relative;
    }
    
    .stTextInput > div > div::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, #3b82f6, #8b5cf6, #06b6d4, #3b82f6);
        background-size: 400% 400%;
        border-radius: 22px;
        z-index: -1;
        opacity: 0;
        animation: gradientShift 3s ease infinite;
        transition: opacity 0.3s ease;
    }
    
    .stTextInput > div > div:focus-within::before {
        opacity: 0.6;
    }
    
    /* 忘记密码链接 - 现代设计 */
    .forgot-password {
        display: flex;
        justify-content: flex-end;
        margin-top: 8px;
    }
    
    .forgot-password a {
        font-family: 'Inter', sans-serif;
        font-size: 14px;
        font-weight: 500;
        color: #667eea;
        text-decoration: none;
        transition: all 0.2s ease;
        position: relative;
    }
    
    .forgot-password a::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(90deg, #667eea, #764ba2);
        transition: width 0.3s ease;
    }
    
    .forgot-password a:hover {
        color: #764ba2;
    }
    
    .forgot-password a:hover::after {
        width: 100%;
    }
    
    /* 高端3D登录按钮 */
    .stButton > button {
        width: 100% !important;
        height: 64px !important;
        background: 
            linear-gradient(135deg, #3b82f6 0%, #8b5cf6 50%, #06b6d4 100%) !important;
        color: white !important;
        border: none !important;
        border-radius: 20px !important;
        font-family: 'Inter', sans-serif !important;
        font-weight: 700 !important;
        font-size: 16px !important;
        letter-spacing: 1px !important;
        text-transform: uppercase !important;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1) !important;
        cursor: pointer !important;
        position: relative !important;
        overflow: hidden !important;
        box-shadow: 
            0 12px 40px rgba(59, 130, 246, 0.4),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset,
            0 1px 0 rgba(255, 255, 255, 0.2) inset !important;
        transform-style: preserve-3d;
    }
    
    /* 按钮发光边框 */
    .stButton > button::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, 
            #3b82f6, #8b5cf6, #06b6d4, #f59e0b, #ef4444, #3b82f6);
        background-size: 400% 400%;
        border-radius: 22px;
        z-index: -1;
        animation: gradientShift 3s ease infinite;
        opacity: 0.8;
        filter: blur(4px);
    }
    
    /* 按钮内部光效 */
    .stButton > button::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, 
            transparent, 
            rgba(255, 255, 255, 0.4), 
            transparent);
        transition: left 0.6s ease;
        z-index: 1;
    }
    
    .stButton > button:hover {
        transform: translateY(-4px) rotateX(5deg) !important;
        box-shadow: 
            0 20px 60px rgba(59, 130, 246, 0.5),
            0 0 0 1px rgba(255, 255, 255, 0.2) inset,
            0 2px 0 rgba(255, 255, 255, 0.3) inset !important;
        background: 
            linear-gradient(135deg, #2563eb 0%, #7c3aed 50%, #0891b2 100%) !important;
    }
    
    .stButton > button:hover::after {
        left: 100%;
    }
    
    .stButton > button:active {
        transform: translateY(-2px) rotateX(2deg) !important;
        box-shadow: 
            0 8px 30px rgba(59, 130, 246, 0.4),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset !important;
    }
    
    .stButton > button:disabled {
        background: 
            linear-gradient(135deg, #475569 0%, #64748b 100%) !important;
        color: #94a3b8 !important;
        cursor: not-allowed !important;
        transform: none !important;
        box-shadow: 
            0 4px 15px rgba(0, 0, 0, 0.2) !important;
    }
    
    .stButton > button:disabled::before,
    .stButton > button:disabled::after {
        display: none;
    }
    
    /* 高端科技分隔符 */
    .divider {
        display: flex;
        align-items: center;
        margin: 40px 0;
        position: relative;
    }
    
    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        height: 2px;
        background: linear-gradient(90deg, 
            transparent 0%, 
            rgba(59, 130, 246, 0.3) 20%, 
            rgba(139, 92, 246, 0.5) 50%, 
            rgba(6, 182, 212, 0.3) 80%, 
            transparent 100%);
        position: relative;
    }
    
    .divider::before {
        animation: lineGlow 2s ease-in-out infinite alternate;
    }
    
    .divider::after {
        animation: lineGlow 2s ease-in-out infinite alternate-reverse;
    }
    
    @keyframes lineGlow {
        0% { opacity: 0.3; transform: scaleX(0.8); }
        100% { opacity: 0.8; transform: scaleX(1); }
    }
    
    .divider span {
        padding: 12px 24px;
        font-family: 'JetBrains Mono', monospace;
        font-size: 12px;
        font-weight: 600;
        color: #94a3b8;
        background: 
            linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%),
            rgba(15, 23, 42, 0.9);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        border: 1px solid rgba(59, 130, 246, 0.3);
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
    }
    
    .divider span::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, 
            transparent, 
            rgba(59, 130, 246, 0.2), 
            transparent);
        animation: dividerShine 3s ease-in-out infinite;
    }
    
    @keyframes dividerShine {
        0% { left: -100%; }
        50% { left: 100%; }
        100% { left: 100%; }
    }
    
    /* 高端SSO按钮 */
    .stLinkButton > a {
        width: 100% !important;
        height: 64px !important;
        background: 
            linear-gradient(135deg, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0.04) 100%),
            rgba(30, 41, 59, 0.6) !important;
        backdrop-filter: blur(20px) saturate(180%) !important;
        color: #e2e8f0 !important;
        border: 2px solid rgba(59, 130, 246, 0.3) !important;
        border-radius: 20px !important;
        font-family: 'Inter', sans-serif !important;
        font-weight: 600 !important;
        font-size: 15px !important;
        text-decoration: none !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1) !important;
        box-sizing: border-box !important;
        box-shadow: 
            0 8px 32px rgba(0, 0, 0, 0.3),
            0 0 0 1px rgba(255, 255, 255, 0.05) inset !important;
        position: relative !important;
        overflow: hidden !important;
        letter-spacing: 0.5px;
    }
    
    .stLinkButton > a::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, 
            rgba(59, 130, 246, 0.5), 
            rgba(139, 92, 246, 0.3), 
            rgba(6, 182, 212, 0.4), 
            rgba(59, 130, 246, 0.5));
        background-size: 400% 400%;
        border-radius: 22px;
        z-index: -1;
        opacity: 0;
        animation: gradientShift 3s ease infinite;
        transition: opacity 0.3s ease;
    }
    
    .stLinkButton > a::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, 
            transparent, 
            rgba(255, 255, 255, 0.1), 
            transparent);
        transition: left 0.6s ease;
    }
    
    .stLinkButton > a:hover {
        background: 
            linear-gradient(135deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.06) 100%),
            rgba(30, 41, 59, 0.8) !important;
        color: #ffffff !important;
        border-color: rgba(59, 130, 246, 0.6) !important;
        transform: translateY(-2px) scale(1.02) !important;
        box-shadow: 
            0 12px 40px rgba(59, 130, 246, 0.3),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset !important;
    }
    
    .stLinkButton > a:hover::before {
        opacity: 0.8;
    }
    
    .stLinkButton > a:hover::after {
        left: 100%;
    }
    
    /* 现代用户信息卡片 */
    .user-info-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        padding: 32px;
        margin: 0 auto 24px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 
            0 25px 50px rgba(0, 0, 0, 0.1),
            0 0 0 1px rgba(255, 255, 255, 0.1) inset;
        position: relative;
        overflow: hidden;
        width: 100%;
        box-sizing: border-box;
    }
    
    .user-info-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    }
    
    .user-name {
        font-family: 'Inter', sans-serif;
        font-size: 28px;
        font-weight: 800;
        margin-bottom: 16px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }
    
    .user-details {
        display: flex;
        gap: 16px;
        flex-wrap: wrap;
        font-family: 'Inter', sans-serif;
        font-size: 14px;
        color: #64748b;
        font-weight: 500;
        margin-bottom: 20px;
    }
    
    .user-role {
        display: inline-block;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 8px 16px;
        border-radius: 12px;
        font-family: 'Inter', sans-serif;
        font-size: 12px;
        font-weight: 600;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }
    
    /* 响应式设计 */
    @media (max-width: 768px) {
        div[data-testid="stAppViewContainer"] .main .block-container {
            width: clamp(300px, 95vw, 400px);
            padding: 32px 24px;
            margin: 3vh auto;
        }
        
        .brand-icon {
            width: 70px;
            height: 70px;
            font-size: 32px;
        }
        
        .brand-title {
            font-size: 28px;
        }
        
        .brand-subtitle {
            font-size: 15px;
        }
        
        .stTextInput > div > div > input,
        .stButton > button,
        .stLinkButton > a {
            height: 52px !important;
            font-size: 15px !important;
        }
    }
    
    @media (max-width: 480px) {
        div[data-testid="stAppViewContainer"] .main .block-container {
            width: clamp(280px, 96vw, 350px);
            padding: 24px 20px;
            margin: 2vh auto;
        }
        
        .brand-icon {
            width: 60px;
            height: 60px;
            font-size: 28px;
        }
        
        .brand-title {
            font-size: 24px;
        }
        
        .brand-subtitle {
            font-size: 14px;
        }
        
        .stTextInput > div > div > input,
        .stButton > button,
        .stLinkButton > a {
            height: 48px !important;
            font-size: 14px !important;
        }
        
        .login-container {
            gap: 20px;
        }
    }
    
    /* 成功状态动画 */
    .success-glow {
        animation: successGlow 0.8s ease-out;
    }
    
    @keyframes successGlow {
        0% { 
            box-shadow: 
                0 25px 50px rgba(0, 0, 0, 0.15),
                0 0 0 0 rgba(34, 197, 94, 0.6);
        }
        70% { 
            box-shadow: 
                0 25px 50px rgba(0, 0, 0, 0.15),
                0 0 0 12px rgba(34, 197, 94, 0);
        }
        100% { 
            box-shadow: 
                0 25px 50px rgba(0, 0, 0, 0.15),
                0 0 0 0 rgba(34, 197, 94, 0);
        }
    }
    
    /* 加载状态 */
    .loading-shimmer {
        background: linear-gradient(90deg, 
            rgba(255,255,255,0.1) 25%, 
            rgba(255,255,255,0.3) 50%, 
            rgba(255,255,255,0.1) 75%);
        background-size: 200% 100%;
        animation: shimmer-loading 2s infinite;
    }
    
    @keyframes shimmer-loading {
        0% { background-position: -200% 0; }
        100% { background-position: 200% 0; }
    }
    
    /* 动画性能优化 */
    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
        
        .stApp::before {
            animation: none;
        }
        
        .brand-icon::before {
            animation: none;
        }
    }
    </style>
    """, unsafe_allow_html=True)
    
    # 登录容器
    with st.container():
        st.markdown('<div class="login-container">', unsafe_allow_html=True)
        
        # 高端品牌标识区
        st.markdown("""
        <div class="login-header">
            <div class="brand-icon">🚀</div>
            <h1 class="brand-title">TradingAgents</h1>
            <p class="brand-subtitle">AI驱动的智能交易平台</p>
        </div>
        """, unsafe_allow_html=True)
        
        # 检查是否已认证
        if unified_auth_manager.is_authenticated():
            user_info = unified_auth_manager.get_current_user()
            if user_info:
                auth_type = user_info.get('auth_type', 'unknown')
                auth_display = "SSO登录" if auth_type == 'sso' else "本地登录"
                role_display = "管理员" if user_info.get('role') == 'admin' else "普通用户"
                
                col1, col2 = st.columns([3, 1])
                with col1:
                    st.markdown(f"""
                    <div class="user-info-card">
                        <div>
                            <h3 class="user-name">👋 欢迎回来，{user_info.get('display_name', '用户')}</h3>
                            <div class="user-details">
                                <span>🎯 {role_display}</span>
                                <span>🌐 {auth_display}</span>
                                <span>🌟 在线中</span>
                            </div>
                        </div>
                        <div class="user-role">{role_display}</div>
                    </div>
                    """, unsafe_allow_html=True)
                
                with col2:
                    if st.button("🚪 安全退出", use_container_width=True, type="secondary"):
                        unified_auth_manager.logout()
                        # 使用重定向管理器处理登出
                        if UX_AVAILABLE:
                            redirect_manager = get_redirect_manager()
                            redirect_manager.redirect_after_logout()
                        else:
                            st.success("✅ 已安全退出，感谢使用！")
                            time.sleep(1)
                            st.rerun()
                st.stop()
        
        # 高端科技登录表单
        with st.container():
            # 用户名输入
            st.markdown('<div class="input-group">', unsafe_allow_html=True)
            st.markdown('<label class="input-label">� Username<l/label>', unsafe_allow_html=True)
            username = st.text_input(
                "用户名", 
                placeholder="Enter your username", 
                key="username_input",
                label_visibility="collapsed"
            )
            st.markdown('</div>', unsafe_allow_html=True)
            
            # 密码输入框
            st.markdown('<div class="input-group">', unsafe_allow_html=True)
            st.markdown('<label class="input-label">�️ P<assword</label>', unsafe_allow_html=True)
            password = st.text_input(
                "密码", 
                type="password", 
                placeholder="Enter your password", 
                key="password_input",
                label_visibility="collapsed"
            )
            st.markdown('</div>', unsafe_allow_html=True)
            
            # 忘记密码链接
            st.markdown("""
            <div class="forgot-password">
                <a href="#" onclick="alert('Contact administrator to reset password 🔧'); return false;">Forgot Password?</a>
            </div>
            """, unsafe_allow_html=True)
            
            # 高端3D登录按钮
            button_disabled = not (username and password)
            if st.button("🚀 LAUNCH LOGIN", use_container_width=True, key="login_button", disabled=button_disabled):
                if username and password:
                    if unified_auth_manager.login_local(username, password):
                        # 使用重定向管理器处理登录后跳转
                        if UX_AVAILABLE:
                            redirect_manager = get_redirect_manager()
                            redirect_manager.redirect_after_login('local')
                        else:
                            st.success("✅ 登录成功！正在为您跳转...")
                            time.sleep(1)
                            # 设置默认分析参数
                            st.query_params.clear()
                            st.query_params['state'] = 'default_state'
                            st.query_params['provider'] = 'dashscope'
                            st.query_params['category'] = 'openai'
                            st.query_params['model'] = 'qwen-plus-latest'
                            st.rerun()
                    else:
                        # 使用错误管理器显示登录失败
                        if UX_AVAILABLE:
                            error_manager = get_error_manager()
                            error_manager.show_error('auth_failed')
                        else:
                            st.error("❌ 用户名或密码错误，请重试")
                else:
                    if UX_AVAILABLE:
                        error_manager = get_error_manager()
                        error_manager.show_warning(
                            "输入不完整", 
                            "请输入用户名和密码",
                            ["确保用户名和密码字段都已填写", "检查是否有多余的空格"]
                        )
                    else:
                        st.warning("⚠️ 请输入用户名和密码")
            
            # 高端科技分隔符
            st.markdown('<div class="divider"><span>Alternative</span></div>', unsafe_allow_html=True)
            
            # 高端SSO登录按钮
            if authing_manager:
                try:
                    auth_url = authing_manager.get_authorization_url()
                    st.link_button(
                        "🌐 AUTHING SSO ACCESS",
                        auth_url,
                        use_container_width=True,
                        type="secondary"
                    )
                except Exception as e:
                    st.link_button(
                        "🌐 SSO ACCESS",
                        "#",
                        use_container_width=True,
                        type="secondary",
                        disabled=True,
                        help="SSO temporarily unavailable"
                    )
            else:
                st.link_button(
                    "🌐 SSO ACCESS",
                    "#",
                    use_container_width=True,
                    type="secondary",
                    disabled=True,
                    help="SSO temporarily unavailable"
                )
        
        st.markdown('</div>', unsafe_allow_html=True)

def check_unified_authentication():
    """检查统一认证状态"""
    return unified_auth_manager.is_authenticated()

def require_unified_permission(permission: str):
    """要求特定权限（统一接口）"""
    return unified_auth_manager.require_permission(permission)

def render_unified_sidebar_user_info():
    """渲染侧边栏用户信息（统一接口）"""
    if not unified_auth_manager.is_authenticated():
        return
    
    user_info = unified_auth_manager.get_current_user()
    if user_info:
        auth_type = user_info.get('auth_type', 'unknown')
        auth_display = "SSO" if auth_type == 'sso' else "本地"
        role_display = "管理员" if user_info.get('role') == 'admin' else "普通用户"
        
        st.sidebar.markdown(f"👤 **{user_info.get('display_name', '未知用户')}**")
        st.sidebar.markdown(f"🏷️ {role_display}")
        st.sidebar.markdown(f"🌐 {auth_display}认证")

def render_unified_sidebar_logout():
    """渲染侧边栏退出按钮（统一接口）"""
    if not unified_auth_manager.is_authenticated():
        return
    
    st.sidebar.markdown("---")
    if st.sidebar.button("🚪 退出登录", use_container_width=True, key="sidebar_logout_btn"):
        unified_auth_manager.logout()
        # 使用重定向管理器处理登出
        try:
            from web.utils.user_experience_manager import get_redirect_manager
            redirect_manager = get_redirect_manager()
            redirect_manager.redirect_after_logout()
        except ImportError:
            st.success("✅ 已安全退出，感谢使用！")
            time.sleep(1)
            st.rerun()