version: '3.8'

services:
  # Nginx with SSL support
  nginx:
    image: nginx:alpine
    container_name: tradingagents-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-https.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - tradingagents-network
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificate management
  certbot:
    image: certbot/certbot
    container_name: tradingagents-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - tradingagents-network

  # Backend service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: tradingagents-backend:latest
    container_name: tradingagents-backend
    expose:
      - "8000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./.env:/app/.env:ro
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      TZ: "Asia/Shanghai"
      DOCKER_ENV: "true"
      MONGODB_URL: mongodb://admin:${MONGODB_PASSWORD:-tradingagents123}@mongodb:27017/tradingagents?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-tradingagents123}@redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-tradingagents123}
      REDIS_DB: 0
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-tradingagents123}
      MONGODB_DATABASE: tradingagents
      MONGODB_AUTH_SOURCE: admin
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: INFO
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
    depends_on:
      - mongodb
      - redis
    networks:
      - tradingagents-network
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:4.4
    container_name: tradingagents-mongodb
    restart: unless-stopped
    expose:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-tradingagents123}
      MONGO_INITDB_DATABASE: tradingagents
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - tradingagents-network

  # Redis
  redis:
    image: redis:alpine
    container_name: tradingagents-redis
    restart: unless-stopped
    expose:
      - "6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-tradingagents123}
    volumes:
      - redis_data:/data
    networks:
      - tradingagents-network

volumes:
  mongodb_data:
    driver: local
    name: tradingagents_mongodb_data
  redis_data:
    driver: local
    name: tradingagents_redis_data
  nginx_logs:
    driver: local
    name: tradingagents_nginx_logs

networks:
  tradingagents-network:
    driver: bridge
    name: tradingagents-network
